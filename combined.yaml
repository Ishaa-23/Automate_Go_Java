openapi: 3.0.0
servers:
  
  - description: Employee CRUD
    url: "http://localhost:5283"
  - description: Student details 
    url: "http://localhost:5093"
  
info:
  version: "1.0.0"
  title: Combined API
  description: Endpoints of CRUD of employee and displaying results of student.

paths:
  /api/Employee:
    
    post:
      tags:
        - Employee
      summary: Adds new employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Employee' 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        
  /api/Employee/{id}:
    get:
      tags:
        - Employee
      summary: Returns employee of given id
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
         description: Success
         content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    put:
      tags:
        - Employee
      summary: Updates employee details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
      responses:
        '200':
         description: Success
         content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
    delete:
      tags:
        - Employee      
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'  
  /api/Student:
    get:
      tags:
        - Student
      servers:
        - url: "http://localhost:5093"
      summary: Returns all student details
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
  /api/Student/{id}:
    get:
      tags:
        - Student
      servers:
        - url: "http://localhost:5093"
      summary: Returns student of given id
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
         description: Success
         content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        
      
  
components:
  schemas: 
    Employee:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        age: 
          type: integer
    Student:
      type: object
      properties:
        id:
          type: integer
        name: 
          type: string
        age:
          type: integer
